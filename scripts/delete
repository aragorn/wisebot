#!/usr/bin/perl -w
#$Id$ 

use lib "./lib/perl";
use lib "../lib/perl";
use lib "../perl";
use strict;
use SoftWise::SoftBot;
use Benchmark;

local $| = 1;
my $host = shift;
my $port = shift;
my $file = shift;
my $confirm = shift || 0;
my $stop = 0;
my $max_size = 400_000;

unless ($host and $port and $file) {
	print <<END;
Usage: $0 <host> <port> <file> [<confirm>]
    host  - hostname of search server
    port  - port number that softbot use
    file  - text data file to register
    confirm - set 1 if you want to confirm every document by key input
END
	exit;
}

$SIG{INT} = sub { $stop++; };

open(FILE, $file) or die "cannot open file: $!";

my $state = 0;
my ($dit, $body, $count, $success) = ("", "", 0, 0);
while (<FILE>) {
	last if $stop;

	if ($state == 0) {
		/TextForTest/ and do {
			print "Regular Data File\n";
			next;
		};
		/^-{78,82}$/ and do {
			$state = 1;
			next;
		};
		/OID=/ and do {
			$dit = $_;
			chomp $dit;
			$body = "";
			$state = 2;
			print "Irregular Data File! Anyway I will handle this.\n";
			next;
		};
	}
	if ($state == 1) {
		$dit = $_;
		chomp $dit;
		$body = "";
		$state = 2;
	}

	if ($state == 2) {
		$state = 3; # empty line
		next;
	}

	if ($state == 3) {
		/^-{78,82}$/ and do {
			my $body_end = substr($body, -100);
			unless ( $body_end =~ /<\/Document>/ ) {
				$body .= $_;
				next;
			}
			$state = 1;
			print "." if (($count % 50) == 0);
			if ($confirm > 1 and $count < $confirm) {
				$count++;
				next;
			}
			delete_rid($dit, $body, $host, $port) and $success++;;
			$count++;
			next;
		};
		$body .= $_;
	}
}

close(FILE);
print "\ndeleted $success / $count docs.\n";
exit;


sub delete_rid {
	my $dit = shift;
	my $body = shift;
	my $host = shift;
	my $port = shift;

	my %dit;
	foreach my $pair ( split(/\^/, $dit) ) {
		my ($key, $data) = split(/=/, $pair);
		next unless defined $key and $key;
		$key = uc($key);

		$data =~ s/^\s+|\s+$//g;
		$dit{$key} = $data;
	}
	$dit{OID} = substr($dit{OID}, -30) if length($dit{OID}) > 30;

	my $dit2 = sprintf("PT=%s^CT=%s^OID=%s^RID=%s^KY=%s^DN=%s^TT=%s^",
					$dit{PT},
					0,
					$dit{OID},
					$dit{RID} || "",
					$dit{OID},
					substr($dit{OID}, 0, 20),
					$dit{TT} || "제목없음");

	printf ("![%dth,size%d]", $count, length($body)) if (length($body) > $max_size);

	my $body_start = substr($body, 0, 60);
	my $body_end = substr($body, -100, 100);
	$body_end =~ s/.*(\]\]><\/B_body>)/$1/;

	$body =~ m!(<RMID>.*</RMID>)!;
	my $rmid = $1;

#print "rmid = $rmid\n";
	if (defined $dit{RID} and $dit{OID} =~ /-1$/) {
		my $sb = new SoftWise::SoftBot($host, $port) or die "cannot connect to softbot: $!";
		#my $docid = $sb->get_docid($dit{RID});
		#$sb = undef;
		#$sb = new SoftWise::SoftBot($host, $port) or die "cannot connect to softbot: $!";
		my $r = $sb->delete_oid($dit{RID}, 'old version');
		print "delete $dit{RID}, $dit{OID}\n";
		return 1 if defined $r and $r;
		print "failed to delete $dit{RID}, $dit{OID}\n";
		return -1;
	}

	return 0;
}

