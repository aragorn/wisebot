#!/usr/bin/perl -w
# $Id$
use strict;

use Getopt::Std;

require "lib_http_client.pl";

sub BEGIN {
	$Getopt::Std::STANDARD_HELP_VERSION = 1;
	our $VERSION = "1.0";
}

sub HELP_MESSAGE {
	print <<END;
Usage: $0 [-r] <host> <port> <header> <file> [<confirm>]
    host
    port
    header   - fieldname#fieldnum:morp_id^ ex) body#0:11^ 
    file     - text data file or cdm data file to register
    confirm  - set 1 if you want to confirm every document by key input

Options:
    -r       - prints koma's raw output instead of rmas output
END
	exit;
}

###################################
#         options 정리
#

HELP_MESSAGE() unless( getopts( "r" ) );
our ( $opt_r );
my $USE_RAW_KOMA = $opt_r;

my $host  = shift;
my $port  = shift;
my $header = shift;
my $file  = shift;
my $confirm = shift || 0;
my $stop = 0;
my $max_size = 10_000_000;

HELP_MESSAGE() unless ($host and $port and $header and $file);

process_data_file($host, $port, $header, $file, $confirm);
exit;


sub process_data_file {
	my $host  = shift;
	my $port  = shift;
    my $header = shift;
	my $file = shift;
	my $confirm = shift;

	open(FILE, $file) or die "cannot open file: $!";

	my $state = 0;
	my ($dit, $body, $count) = ("", "", 0);
	while (<FILE>) {
		last if $stop;

		if ($state == 0) {
			/TextForTest/ and do {
				print "Regular Data File\n";
				next;
			};
			/^-{78,82}$/ and do {
				$state = 1;
				next;
			};
			/OID=/ and do {
				$dit = $_;
				chomp $dit;
				$body = "";
				$state = 2;
				print "Irregular Data File! Anyway I will handle this.\n";
				next;
			};
		}
		if ($state == 1) {
			# 구분선이 연속으로 오는 경우도 그냥 처리
			/^-{78,82}$/ and do {
				$state = 1;
				next;
			};

			$dit = $_;
			chomp $dit;
			$body = "";
			$state = 2;
		}

		if ($state == 2) {
			$state = 3; # empty line
			next;
		}

		if ($state == 3) {
			/^-{78,82}$/ and $body =~ /<\/Document>/ and do {
				$state = 1;
				#print "." if (($count % 50) == 0);
				if ($confirm > 1 and $count < $confirm) {
					$count++;
					next;
				}
				my $output = lib_morph_analyze($host, $port, $header, $body);
				print "-" x 80, "\n", $dit, "\n\n", $output, "\n";

				my $tmp = <STDIN> if $confirm;
				$count++;
				next;
			};
			$body .= $_;
		}
	}
	close(FILE);
	print "\nregistered $count docs.\n";
}

