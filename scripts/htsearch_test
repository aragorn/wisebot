#!/usr/bin/perl

use strict;
use Getopt::Std;
use CGI::Util qw(unescape escape);
use LWP::UserAgent;
use HTTP::Request::Common;
use XML::LibXSLT;
use XML::LibXML;

require "lib_http_client.pl";

sub BEGIN {
	$Getopt::Std::STANDARD_HELP_VERSION = 1;
	our $VERSION = "1.0";
}

sub HELP_MESSAGE {
	print <<END;
Usage: $0 [-p] [-q] [-l] [-m mode] [-t sleep_time] <host> <port> [-/file]
    host  - hostname of search server
    port  - port number that softbot use
    file  - contains query samples. - means stdin
Options:
    -p    - print search result
    -q    - print query
    -l    - restart search infinitely
    -l mode       - search mode, 1 - 형태소분석
                              or 2 - 바이그램
                              or 3 - 바이그램 ! 형태소분석
    -t sleep_time - sleep time(seconds) between query search [default:1]
END
	exit;
}

my $EXTENSION_FOR_SCOURT = 1;
###################################
#         options 정리

my ( $print_query, $print_result, $mode, $loop );
my $sleep_time = 0;

HELP_MESSAGE() unless( getopts( "qplm:t:" ) );
our ( $opt_q, $opt_p, $opt_l, $opt_m, $opt_t );

$print_query  = ( $opt_q or $opt_p );
$print_result = $opt_p;
$mode         = $opt_m;
$sleep_time   = $opt_t if ( $opt_t eq "0" or $opt_t );
$loop         = $opt_l;

my $host = shift;
my $port = shift;
my $file = shift;


$file = "-" if ( !$file );

HELP_MESSAGE() unless ($host and $port and $file);
print "host: $host, port: $port, file: $file\n";
my $target = "http://" . $host . ":" . $port . "/search/search";

do {
	if ( not $file eq "-" ) {
		open STDIN, "<$file" or die $!;
	}

	my $query;
	while ( $query = <STDIN> ) {
		chomp $query;
		next unless $query;


		print "질의단어: ($query)" if ( $print_query );
		my $ma_words = get_koma_result($host, $port, $query);

		my @count;
		foreach my $mode ( 1..3 )
		{
		  my $wisebot_query = get_wisebot_query($query, $mode);
		  my $output = lib_search($host, $port, $wisebot_query);
		  $output =~ m/문서수\s+: (\d+)/;
		  $count[$mode] = $1;

		  #print $output if $print_result and not $EXTENSION_FOR_SCOURT;
		  #print_scourt($output) if $EXTENSION_FOR_SCOURT;
		  sleep( $sleep_time );
		}
		printf "|| %20s || %30s || %4d || %3d || %3d ||\n",
			$query, $ma_words, $count[1], $count[2], $count[3];
	}

	close STDIN;
} while ( $loop );

sub get_wisebot_query
{
	my $query = shift || "";
	my $mode  = shift || 1;

	my $str;
	if    ($mode == 3) { $str = "BIGRAM:(" . $query . ") ! (" . $query . ")"; }
	elsif ($mode == 2) { $str = "BIGRAM:(" . $query . ")"; }
	else               { $str =        "(" . $query . ")"; }

	my $r = <<END;
SELECT *
SEARCH $str
ORDER_BY PronounceDate DESC, CaseNum1 DESC, CaseNum2 ASC, CaseNum3 DESC
LIMIT 0,1
END

	return $r;
}

sub print_scourt
{
	my $output = shift;

	print $output;
}

sub get_koma_result
{
	my $host  = shift;
	my $port  = shift;
	my $string = shift;
	my $header = "Body#0:100^";

	my $body = <<END;
<Document><Body><![CDATA[$string]]></Body></Document>
END
	
	my $result = lib_morph_analyze($host, $port, $header, $body);
	my ($count, @words) = split(/\n/, $result);
	my $output = join(" + ", @words);

	return $output;
}
