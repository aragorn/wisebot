# vim:ft=softbotdoc:tw=80:

For current status of mod_httpd
Last modified: [$Date$]

 * apache 2.0.x 의 source를 기반으로 웹서버 부분의 코드를 옮겨오는 작업을
  진행한다. 이 작업의 목표는 매우 stable한 httpd를 SoftBotNext framework
  내에서 구현하는 것이다. 이 httpd는 xml-based query를 처리하는 handler와
  결합되고, SoftBotNext 프로토콜의 핵심 서버 역할을 담당한다.

 * source code를 정리하는 기준
  1) general한 server code는 http_* 라는 prefix 없는 파일에 둔다.
  2) http protocol에 매우 dependent한 code는 http_* 라는 prefix가 붙은
     파일에 둔다. 이때 xxx.[ch] 의 코드는 http_*.h 를 include하지 않는
     것이 맞다. 이러한 원칙과 충돌하는 코드는 refactoring하여 정리해 나간다.
  3) 각 *.[ch] 파일은 쌍을 이루어야 한다. *.c 파일에 위치한 function의
     prototype은 *.h에 존재해야 한다.
  4) apache2의 code를 참조하여 잘 정리해 나간다.
     server/*.c, include/*.h, modules/http/*.[ch] 가 original source이다.
  5) 불필요한 코드는 가지치기하여 없애어 나간다.

  !! 현재 이 원칙에 부합하지 않는 코드가 뒤섞여 있다. 특히 header file과 
    *.c 파일의 대응이 일치하지 않는 경우가 많은데, 이것은 apache2의 코드가
    이러한 대응규칙을 지키지 않고 있는 것을 그대로 가져와서 그렇다.
    apache2는 include/*.h 에 위치한 header파일의 이름이 일관성이 없고,
    대부분이 http_* 라는 prefix를 갖고 있다.

    apache2의 code는 http에 dependent한 code와 general server의 code가
    원칙없이 애매하게 뒤섞인 것이 많다. apache2가 주장하기를 http 이외의
    protocol도 지원할 수 있는 구조라고 하나, 지금 현재의 구조로는 제약이
    많고, 코드가 전체적으로 http에 의존하는 것이 너무 많다.

  !! config.c와 conf.h가 한 쌍이다. 이것은 SoftBotNext의 include/config.h
    와의 충돌을 방지하기 위한 꽁수이다. 현재로선 이 이상의 방법이 없는
    것으로 보인다.

 * source file에 대한 간략한 설명 TODO

conf.h	      gen_test_char.c  http_protocol.h	log.h	     test_main.c
config.c      http_config.c    http_request.c	mod_httpd.c  util_cfgtree.c
connection.c  http_config.h    http_request.h	mod_httpd.h  util_cfgtree.h
connection.h  http_core.c      http_util.c	protocol.c   util_filter.c
core.c	      http_core.h      http_util.h	protocol.h   util_filter.h
core.h	      http_filter.c    listen.c		request.c    util_time.c
filter.c      http_filter.h    listen.h		request.h    util_time.h
filter.h      http_protocol.c  log.c		test_char.h



